;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/20/2019
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Declare your global variables here
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001F // Place your code here
; 0000 0020 OCR0 += 10;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0021 OCR2 += 10;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0022 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0026 {
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0027 // Place your code here
; 0000 0028 OCR0 -= 10;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0029 OCR2 -= 10;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002A }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;void main(void)
; 0000 002D {
;PCODE: $00000023 VOL: 0
; 0000 002E // Declare your local variables here
; 0000 002F 
; 0000 0030 // Input/Output Ports initialization
; 0000 0031 // Port A initialization
; 0000 0032 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0033 DDRA=(1<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0034 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0035 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0036 
; 0000 0037 // Port B initialization
; 0000 0038 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 0039 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 003A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=T Bit1=T Bit0=T
; 0000 003B PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003C 
; 0000 003D // Port C initialization
; 0000 003E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003F DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0040 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0041 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0042 
; 0000 0043 // Port D initialization
; 0000 0044 // Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0045 DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0046 // State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0047 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0048 
; 0000 0049 // Timer/Counter 0 initialization
; 0000 004A // Clock source: System Clock
; 0000 004B // Clock value: 125.000 kHz
; 0000 004C // Mode: Phase correct PWM top=0xFF
; 0000 004D // OC0 output: Non-Inverted PWM
; 0000 004E // Timer Period: 4.08 ms
; 0000 004F // Output Pulse(s):
; 0000 0050 // OC0 Period: 4.08 ms Width: 0.768 ms
; 0000 0051 TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0052 TCNT0=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0053 OCR0=0x30;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0054 
; 0000 0055 // Timer/Counter 2 initialization
; 0000 0056 // Clock source: System Clock
; 0000 0057 // Clock value: 125.000 kHz
; 0000 0058 // Mode: Fast PWM top=0xFF
; 0000 0059 // OC2 output: Non-Inverted PWM
; 0000 005A // Timer Period: 2.048 ms
; 0000 005B // Output Pulse(s):
; 0000 005C // OC2 Period: 2.048 ms Width: 0.38551 ms
; 0000 005D ASSR=0<<AS2;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005E TCCR2=(1<<PWM2) | (1<<COM21) | (0<<COM20) | (1<<CTC2) | (1<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 005F TCNT2=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0060 OCR2=0x30;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0061 
; 0000 0062 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0063 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0064 
; 0000 0065 // External Interrupt(s) initialization
; 0000 0066 // INT0: On
; 0000 0067 // INT0 Mode: Any change
; 0000 0068 // INT1: On
; 0000 0069 // INT1 Mode: Rising Edge
; 0000 006A // INT2: Off
; 0000 006B GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 006C MCUCR=(1<<ISC11) | (1<<ISC10) | (0<<ISC01) | (1<<ISC00);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 006D MCUCSR=(0<<ISC2);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 006E GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 006F 
; 0000 0070 // Global enable interrupts
; 0000 0071 #asm("sei")
;PCODE: $0000004D VOL: 0
	sei
;PCODE: $0000004E VOL: 0
; 0000 0072 
; 0000 0073 while (1)
;PCODE: $0000004F VOL: 0
; 0000 0074       {
; 0000 0075       // Place your code here
; 0000 0076 
; 0000 0077 
; 0000 0078       // An Example of How Ports Work!!
; 0000 0079 
; 0000 007A       if(PINA.6 == 1){
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 007B         PORTA.7 = 1;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 007C       }else PORTA.7 = 0;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 007D 
; 0000 007E       }
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 007F }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
